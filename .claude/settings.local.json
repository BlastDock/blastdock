{
  "permissions": {
    "allow": [
      "Bash(*)",
      "Bash(python test_installation.py:*)",
      "Bash(python3:*)",
      "Bash(mkdir:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(blastdock:*)",
      "Bash(python:*)",
      "Bash(pip3 install:*)",
      "Bash(rm:*)",
      "Bash(twine check:*)",
      "Bash(twine upload:*)",
      "Bash(grep:*)",
      "Bash(git add:*)",
      "Bash(apt:*)",
      "Bash(apt install:*)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -c \"from blastdock.cli import performance_cmd; print('Performance CLI loaded successfully')\")",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -c \"from blastdock.cli.performance import performance; print('Performance CLI loaded successfully')\")",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -c \"from blastdock.cli import main; main()\" version)",
      "Bash(rg:*)",
      "Bash(./install.sh:*)",
      "Bash(pip show:*)",
      "Bash(pipx list:*)",
      "Bash(pipx uninstall:*)",
      "Bash(pipx install:*)",
      "Bash(/root/.local/share/pipx/venvs/blastdock/bin/pip list)",
      "Bash(pipx runpip:*)",
      "Bash(pipx inject:*)",
      "Bash(pipx reinstall:*)",
      "Bash(mv:*)",
      "Bash(cat:*)",
      "Bash(tar:*)",
      "Bash(touch:*)",
      "Bash(for:*)",
      "Bash(do if [ -f \"$file\" ])",
      "Bash(! grep -q \"traefik_compatible:\" \"$file\")",
      "Bash(then echo \"  - $file\")",
      "Bash(fi)",
      "Bash(done)",
      "Bash(chmod:*)",
      "Bash(./publish_to_pypi.sh)",
      "Bash(./publish_simple.sh:*)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -c \"import blastdock; print(''Import successful'')\")",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest tests/unit/test_config/test_models.py -v --tb=short)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest tests/unit/test_models/test_port.py::TestPortStatus::test_port_status_values -v --tb=short)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest tests/unit/test_models/test_port_simple.py::TestPortStatus::test_port_status_values -v --tb=short)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest --cov=blastdock --cov-report=term-missing tests/ --tb=no -q)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest tests/unit/test_core/test_deployment_manager_comprehensive.py::TestDeploymentManagerInit::test_initialization -v --tb=short)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest --cov=blastdock --cov-report=term --tb=no -q tests/)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest --cov=blastdock --cov-report=term-missing --cov-report=json -q)",
      "Bash(true)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest tests/unit/test_docker/ -v --tb=short)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest --cov=blastdock --cov-report=term-missing --no-header)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest tests/unit/test_docker/test_client.py -v --cov=blastdock.docker.client --cov-report=term-missing)",
      "Bash(docker container prune:*)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest tests/unit/test_docker/test_client.py::TestDockerClient::test_cleanup_resources_basic -xvs)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest tests/unit/test_docker/test_client.py --cov=blastdock.docker.client --cov-report=term-missing -q)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest tests/unit/test_docker/test_client.py --cov=blastdock.docker --cov-report=term-missing)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest tests/unit/test_docker/test_compose_new.py -v --cov=blastdock.docker.compose --cov-report=term-missing)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest tests/unit/test_docker/test_compose_updated.py -v --cov=blastdock.docker.compose --cov-report=term-missing)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest tests/unit/test_docker/test_containers_new.py -v --cov=blastdock.docker.containers --cov-report=term-missing)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest --cov=blastdock --cov-report=term-missing --cov-report=json:coverage_results.json -q)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest tests/unit/test_docker/test_health.py --cov=blastdock.docker.health --cov-report=term-missing -q)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest tests/unit/test_docker/test_health_new.py -v --cov=blastdock.docker.health --cov-report=term-missing)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest tests/unit/test_docker/test_health_new.py::TestDockerHealthChecker::test_check_docker_daemon_health_success -v)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest tests/unit/test_docker/test_health_working.py -v --cov=blastdock.docker.health --cov-report=term-missing)",
      "Bash(PYTHONPATH=/mnt/c/Sync/Codebox/ClaudeCode/BlastDock python3 -m pytest --cov=blastdock.core.deployment_manager --cov-report=term-missing)",
      "Bash(PYTHONPATH=:*)",
      "Bash(flake8:*)",
      "Bash(unzip:*)",
      "Bash(pip uninstall:*)"
    ],
    "deny": []
  }
}