[tool:pytest]
# Pytest configuration for BlastDock

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test markers
markers =
    unit: Unit tests
    integration: Integration tests
    performance: Performance tests
    slow: Slow running tests
    docker: Tests requiring Docker
    network: Tests requiring network access
    
# Minimum version
minversion = 6.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --tb=short
    -ra
    --cov-report=term-missing
    --cov-branch
    --cov=blastdock
    --cov-fail-under=100

# Console output
console_output_style = progress

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Capture configuration
log_capture = true
log_level = DEBUG

# Warning filters
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:docker.*
    ignore::UserWarning:urllib3.*

# Test timeout (in seconds)
timeout = 300

# Parallel execution
# Uncomment to enable parallel testing (requires pytest-xdist)
# -n auto

# Coverage configuration
[coverage:run]
source = blastdock
omit = 
    tests/*
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*
    */settings/*
    setup.py
    */site-packages/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstract
    
show_missing = true
precision = 2

[coverage:html]
directory = htmlcov